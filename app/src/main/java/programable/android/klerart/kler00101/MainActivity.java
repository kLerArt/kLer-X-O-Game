package programable.android.klerart.kler00101;import android.content.Intent;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.view.View;import android.widget.Button;import android.widget.TextView;import android.widget.Toast;public class MainActivity extends AppCompatActivity implements View.OnClickListener {    private Button [][] buttons= new Button [3][3];    private boolean player1Turn= true  ;    private  int roundCount;    private  int Player1Point , Player2Point;    private TextView textViewPlayer1;    private TextView TextViewPlayer2;    int Zy=0;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        textViewPlayer1=findViewById( R.id.VPlayer1);        TextViewPlayer2=findViewById( R.id.VPlayer2);        //==========================================================================================================        final Button SeconedActivite = (Button)findViewById(R.id.ChangePage);        SeconedActivite.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Intent StartIntent = new Intent(getApplicationContext(),SeconedActivite.class);                startActivity(StartIntent);            }        });        //=============================================================================================================        for (int i=0 ;i<3 ; i++){            for (int j=0 ;j<3 ; j++){                String ButtonID ="bottom"+i+j;                int resID= getResources().getIdentifier(ButtonID, "id",getPackageName());                buttons [i][j]=findViewById(resID);                buttons [i][j].setOnClickListener(this);            }        }        Button buttonReset=findViewById(R.id.ButtonRest);        buttonReset.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                ResetBoard();            }        });        Button ButtonRestart=findViewById(R.id.ButtonRestart);        ButtonRestart.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                ResetBoard();                Player1Point=0;                Player2Point=0;                UpDataPointText();            }        });    }    @Override    public void onClick(View view) {        if (!((Button)view).getText().toString().equals(""))return;        if (player1Turn){            ((Button)view).setText("X");        }else{            ((Button)view).setText("O");        }        roundCount++;        if (checkForWier()){            if(player1Turn){                player1Wins();            }            else {                player2Wins();            } }else   if(roundCount == 9){            draw();        }else {            player1Turn=! player1Turn;        }    }    private  boolean checkForWier(){        String[][] field=new  String[3][3];        for (int i=0; i<3;i++){            for (int j=0;j<3;j++){                field[i][j]=buttons[i][j].getText().toString();            }        }        for (int i=0;i<3 ;i++){            if(field[i][0].equals(field[i][1])                    && field[i][0].equals(field[i][2])                    && !field[i][0].equals("")){                return  true;            }        }        for (int i=0;i<3 ;i++){            if(field[0][i].equals(field[1][i])                    && field[0][i].equals(field[2][i])                    && !field[0][i].equals("")){                return  true;            }        }        for (int i=0;i<3 ;i++){            if(field[0][0].equals(field[1][1])                    && field[0][0].equals(field[2][2])                    && !field[0][0].equals("")){                return  true;            }        }        for (int i=0;i<3 ;i++){            if(field[0][2].equals(field[1][1])                    && field[0][2].equals(field[2][0])                    && !field[0][2].equals("")){                return  true;            }        }return false;    }    private void player1Wins(){        Player1Point++;        Toast.makeText(this,"player 1 Wines!",Toast.LENGTH_SHORT).show();        UpDataPointText();        ResetBoard();    }    private void player2Wins(){        Player2Point++;        Toast.makeText(this,"player 2 Wines!",Toast.LENGTH_SHORT).show();        UpDataPointText();        ResetBoard();    }    private void draw(){        Toast.makeText(this,"Draw",Toast.LENGTH_SHORT).show();        ResetBoard();    }    private  void  UpDataPointText(){        textViewPlayer1.setText("Player 1 X:"+Player1Point);        TextViewPlayer2.setText("Player 2 O:"+Player2Point);    }    private  void ResetBoard(){        for (int i=0; i<3; i++){            for (int j=0;j<3;j++){                buttons[i][j].setText("");            }        }        roundCount=0;        player1Turn=true;    }    @Override    protected void onSaveInstanceState(Bundle outState) {        super.onSaveInstanceState(outState);        outState.putInt("roundCount",roundCount);        outState.putInt("Player1Point",Player1Point);        outState.putInt("Player2Point",Player2Point);        outState.putBoolean("player1Turn",player1Turn);    }    @Override    protected void onRestoreInstanceState(Bundle savedInstanceState) {        super.onRestoreInstanceState(savedInstanceState);        roundCount=savedInstanceState.getInt("roundCount");        Player1Point=savedInstanceState.getInt("Player1Point");        Player2Point=savedInstanceState.getInt("Player2Point");        player1Turn=savedInstanceState.getBoolean("player1Turn");    }}